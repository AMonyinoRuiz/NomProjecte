Imports Infragistics.Win.UltraWinGrid
Imports DevExpress.XtraCharts
Imports Infragistics.Win

Public Class frmTarifas

    Sub New()

        InitializeComponent()
        ' This line of code is generated by Data Source Configuration Wizard
        ' Fill a SqlDataSource
        'SqlDataSource1.Fill()'grafica
    End Sub
    Dim oArrayProductesSeleccionats As New ArrayList
    Dim oArrayProveidorsSeleccionats As New ArrayList
    Dim oDTC As New DTCDataContext(BD.Conexion)

#Region "ToolForm"
    Private Sub ToolForm_m_ToolForm_Salir() Handles ToolForm.m_ToolForm_Salir
        Me.FormTancar()
    End Sub
#End Region

    Public Sub Entrada()

        Me.AplicarDisseny()

        Me.TE_RutaExportacio.Value = oDTC.Configuracion.FirstOrDefault.PathExportacioXML
        Me.TE_RutaExportacio.ButtonsRight("Lupeta").Enabled = True

        Util.Tab_InVisible_x_Key(Me.UltraTabControl2, M_Util.Enum_Tab_Activacion.ALGUNOS, "Cambios")

        Call CarregarArticlesTots()
        Call CargarGrid_Articles_Seleccionats()
        Call CarregarProveidorsTots()
        Call CargarGridProveidorsSeleccionats()

        Util.Cargar_Combo(Me.C_Proveedor, "Select  ID_Proveedor, Descripcion From Proveedor Where Activo=1 Order by Descripcion", False, False)
        Util.Cargar_Combo(Me.C_CambioAlbaran_Proveedor, "Select  ID_Proveedor, Descripcion From Proveedor Where Activo=1 Order by Descripcion", False, False)
        Util.Cargar_Combo(Me.C_CambioAlbaran_Articulo, "Select  ID_Articulo, Descripcion From Articulo Where Activo=1 Order by Descripcion", False, False)

        Me.DT_CambioAlbaran_FechaInicio.Value = Now.Date
        Me.DT_CambioAlbaran_FechaFin.Value = Now.Date
        Me.DT_Modificacio.Value = Now

        Me.C_CambioAlbaran_Articulo.DropDownStyle = Infragistics.Win.DropDownStyle.DropDown
        Me.C_CambioAlbaran_Proveedor.DropDownStyle = Infragistics.Win.DropDownStyle.DropDown

        'Me.SqlDataSource1.ConnectionOptions
        Me.ChartControl2.DataSource = Nothing

    End Sub

    Private Sub TE_RutaExportacio_EditorButtonClick(sender As Object, e As UltraWinEditors.EditorButtonEventArgs) Handles TE_RutaExportacio.EditorButtonClick
        If e.Button.Key = "Lupeta" Then
            Dim Dialog As New System.Windows.Forms.FolderBrowserDialog
            If Dialog.ShowDialog = Windows.Forms.DialogResult.OK Then
                Try
                    Me.TE_RutaExportacio.Text = Dialog.SelectedPath
                Catch oerr As Exception

                End Try
            End If
        End If
    End Sub

    Private Sub TE_RutaExportacio_ValueChanged(sender As Object, e As EventArgs) Handles TE_RutaExportacio.ValueChanged
        If Me.TE_RutaExportacio.Value <> "" And Me.TE_RutaExportacio.Value <> "TE_RutaExportacio" Then

            Dim oLinqConfiguracion As Configuracion
            oLinqConfiguracion = (From taula In oDTC.Configuracion Select taula).FirstOrDefault
            oLinqConfiguracion.PathExportacioXML = Me.TE_RutaExportacio.Value

            oDTC.SubmitChanges()

        End If
    End Sub

#Region "Grid articles"

    Private Sub CarregarArticlesTots()
        Try
            'Dim _Pepe As New DataSet
            '_Pepe.ReadXml("c:\pgm\RTCBI_ST-TO31.xml")
            'Me.GRD_ArticulosTodos.GRID.DataSource = _Pepe
            'Exit Sub

            Dim _ArticlesSeleccionats As String = ""

            If oArrayProductesSeleccionats.Count > 0 Then

                Dim _IDArticle As Integer
                For Each _IDArticle In oArrayProductesSeleccionats
                    _ArticlesSeleccionats = _ArticlesSeleccionats & _IDArticle & ", "
                Next

                _ArticlesSeleccionats = " Where Activo=1 and ID_Articulo Not in (" & Mid(_ArticlesSeleccionats, 1, _ArticlesSeleccionats.Length - 2) & ")"
            End If

            Me.GRD_ArticulosTodos.M.clsUltraGrid.Cargar("Select * From C_Articulos " & _ArticlesSeleccionats, BD)

        Catch ex As Exception
            Mensaje.Mostrar_Mensaje_Error(ex)
        End Try
    End Sub

    Private Sub GRD_Articles_M_GRID_DoubleClickRow2(ByRef sender As M_UltraGrid.m_UltraGrid, ByRef e As Infragistics.Win.UltraWinGrid.UltraGridRow) Handles GRD_ArticulosTodos.M_GRID_DoubleClickRow2
        Call B_Producte_Seleccionar_Click(Nothing, Nothing)
    End Sub

    Private Sub GRD_ArticulosSeleccionados_M_GRID_DoubleClickRow2(ByRef sender As M_UltraGrid.m_UltraGrid, ByRef e As Infragistics.Win.UltraWinGrid.UltraGridRow) Handles GRD_ArticulosSeleccionados.M_GRID_DoubleClickRow2
        Call B_Producte_DesSeleccionar_Click(Nothing, Nothing)
    End Sub

    Private Sub CargarGrid_Articles_Seleccionats()
        Try
            Dim _ArticlesSeleccionats As String = ""


            If oArrayProductesSeleccionats.Count > 0 Then
                _ArticlesSeleccionats = "  "
                Dim _IDArticle As Integer
                For Each _IDArticle In oArrayProductesSeleccionats
                    _ArticlesSeleccionats = _ArticlesSeleccionats & _IDArticle & ", "
                Next

                _ArticlesSeleccionats = "Where ID_Articulo in (" & Mid(_ArticlesSeleccionats, 1, _ArticlesSeleccionats.Length - 2) & ")"

                Dim _DT As DataTable = BD.RetornaDataTable("Select * From C_Articulos " & _ArticlesSeleccionats & " Order by Descripcion")

                Me.GRD_ArticulosSeleccionados.M.clsUltraGrid.Cargar(_DT)
            Else
                Me.GRD_ArticulosSeleccionados.M.clsUltraGrid.Cargar("Select * From C_Articulos Where ID_Articulo=0 Order by Descripcion", BD)
            End If

        Catch ex As Exception
            Mensaje.Mostrar_Mensaje_Error(ex)
        End Try
    End Sub

    Private Sub B_Producte_Seleccionar_Click(sender As Object, e As EventArgs) Handles B_Producte_Seleccionar.Click
        If Me.GRD_ArticulosTodos.GRID.Selected.Rows.Count = 1 Then
            oArrayProductesSeleccionats.Add(Me.GRD_ArticulosTodos.GRID.Selected.Rows(0).Cells("ID_Articulo").Value)
            Me.GRD_ArticulosTodos.GRID.Selected.Rows(0).Hidden = True
            Call CargarGrid_Articles_Seleccionats()
        End If
    End Sub

    Private Sub B_Producte_DesSeleccionar_Click(sender As Object, e As EventArgs) Handles B_Producte_DesSeleccionar.Click
        If Me.GRD_ArticulosSeleccionados.GRID.Selected.Rows.Count = 1 Then
            oArrayProductesSeleccionats.Remove(Me.GRD_ArticulosSeleccionados.GRID.Selected.Rows(0).Cells("ID_Articulo").Value)
            Me.GRD_ArticulosSeleccionados.GRID.Selected.Rows(0).Hidden = True
            Call CarregarArticlesTots()
        End If
    End Sub

    Private Sub B_Producte_SeleccionarTots_Click(sender As Object, e As EventArgs) Handles B_Producte_SeleccionarTots.Click


        Dim _pRow As UltraGridRow
        For Each _pRow In Me.GRD_ArticulosTodos.GRID.Rows.GetFilteredInNonGroupByRows
            If _pRow.Hidden = False And _pRow.IsFilterRow = False Then
                oArrayProductesSeleccionats.Add(_pRow.Cells("ID_Articulo").Value)
                _pRow.Hidden = True
            End If
        Next

        Call CargarGrid_Articles_Seleccionats()
    End Sub

    Private Sub B_Producte_DesSeleccionarTots_Click(sender As Object, e As EventArgs) Handles B_Producte_DesSeleccionarTots.Click
        Dim _pRow As UltraGridRow
        For Each _pRow In Me.GRD_ArticulosSeleccionados.GRID.Rows
            If _pRow.Hidden = False Then
                oArrayProductesSeleccionats.Remove(_pRow.Cells("ID_Articulo").Value)
                _pRow.Hidden = True
            End If
        Next
        Call CarregarArticlesTots()
    End Sub

#End Region

#Region "Grid proveidors"

    Private Sub CarregarProveidorsTots()
        Try

            Dim _ProveidorsSeleccionats As String = " Where Activo=1 "

            If oArrayProveidorsSeleccionats.Count > 0 Then

                Dim _IDProveidor As Integer
                For Each _IDProveidor In oArrayProveidorsSeleccionats
                    _ProveidorsSeleccionats = _ProveidorsSeleccionats & _IDProveidor & ", "
                Next

                _ProveidorsSeleccionats = " Where Activo=1 and ID_Proveedor Not in (" & Mid(_ProveidorsSeleccionats, 1, _ProveidorsSeleccionats.Length - 2) & ")"
            End If

            Me.GRD_ProveedoresTodos.M.clsUltraGrid.Cargar("Select * From C_Proveedores  " & _ProveidorsSeleccionats, BD)

        Catch ex As Exception
            Mensaje.Mostrar_Mensaje_Error(ex)
        End Try
    End Sub

    Private Sub GRD_ProveedoresTodos_M_GRID_DoubleClickRow2(ByRef sender As M_UltraGrid.m_UltraGrid, ByRef e As Infragistics.Win.UltraWinGrid.UltraGridRow) Handles GRD_ProveedoresTodos.M_GRID_DoubleClickRow2
        Call B_Proveidor_Seleccionar_Click(Nothing, Nothing)
    End Sub

    Private Sub GRD_ProveedoresSeleccionados_M_GRID_DoubleClickRow2(ByRef sender As M_UltraGrid.m_UltraGrid, ByRef e As Infragistics.Win.UltraWinGrid.UltraGridRow) Handles GRD_ProveedoresSeleccionados.M_GRID_DoubleClickRow2
        Call B_Proveidor_DesSeleccionar_Click(Nothing, Nothing)
    End Sub

    Private Sub CargarGridProveidorsSeleccionats()
        Try
            Dim _ProveidorsSeleccionats As String = ""

            If oArrayProveidorsSeleccionats.Count > 0 Then
                _ProveidorsSeleccionats = "  "
                Dim _IDProveidor As Integer
                For Each _IDProveidor In oArrayProveidorsSeleccionats
                    _ProveidorsSeleccionats = _ProveidorsSeleccionats & _IDProveidor & ", "
                Next

                _ProveidorsSeleccionats = "Where ID_Proveedor in (" & Mid(_ProveidorsSeleccionats, 1, _ProveidorsSeleccionats.Length - 2) & ")"

                Dim _DT As DataTable = BD.RetornaDataTable("Select * From C_Proveedores " & _ProveidorsSeleccionats & " Order by Descripcion")

                Me.GRD_ProveedoresSeleccionados.M.clsUltraGrid.Cargar(_DT)
            Else
                'Me.GRD_ProveedoresSeleccionados.M.clsUltraGrid.Cargar("Select * From C_Proveedores Where ID_Proveedor=0 Order by Descripcion", BD)
            End If

        Catch ex As Exception
            Mensaje.Mostrar_Mensaje_Error(ex)
        End Try
    End Sub

    Private Sub B_Proveidor_Seleccionar_Click(sender As Object, e As EventArgs) Handles B_Proveidor_Seleccionar.Click
        If Me.GRD_ProveedoresTodos.GRID.Selected.Rows.Count = 1 Then
            oArrayProveidorsSeleccionats.Add(Me.GRD_ProveedoresTodos.GRID.Selected.Rows(0).Cells("ID_Proveedor").Value)
            Me.GRD_ProveedoresTodos.GRID.Selected.Rows(0).Hidden = True
            Call CargarGridProveidorsSeleccionats()
        End If
    End Sub

    Private Sub B_Proveidor_DesSeleccionar_Click(sender As Object, e As EventArgs) Handles B_Proveidor_DesSeleccionar.Click
        If Me.GRD_ProveedoresSeleccionados.GRID.Selected.Rows.Count = 1 Then
            oArrayProveidorsSeleccionats.Remove(Me.GRD_ProveedoresSeleccionados.GRID.Selected.Rows(0).Cells("ID_Proveedor").Value)
            Me.GRD_ProveedoresSeleccionados.GRID.Selected.Rows(0).Hidden = True
            Call CarregarProveidorsTots()
        End If
    End Sub

    Private Sub B_Proveidor_SeleccionarTots_Click(sender As Object, e As EventArgs) Handles B_Proveidor_SeleccionarTots.Click
        Dim _pRow As UltraGridRow
        For Each _pRow In Me.GRD_ProveedoresTodos.GRID.Rows.GetFilteredInNonGroupByRows
            If _pRow.Hidden = False Then
                oArrayProveidorsSeleccionats.Add(_pRow.Cells("ID_Proveedor").Value)
                _pRow.Hidden = True
            End If
        Next
        Call CargarGridProveidorsSeleccionats()
    End Sub

    Private Sub B_Proveidor_DesSeleccionarTots_Click(sender As Object, e As EventArgs) Handles B_Proveidor_DesSeleccionarTots.Click
        Dim _pRow As UltraGridRow
        For Each _pRow In Me.GRD_ProveedoresSeleccionados.GRID.Rows
            If _pRow.Hidden = False Then
                oArrayProveidorsSeleccionats.Remove(_pRow.Cells("ID_Proveedor").Value)
                _pRow.Hidden = True
            End If
        Next
        Call CarregarProveidorsTots()
    End Sub

#End Region

#Region "Grid individual"
    Private Sub CargarGrid_Individual()
        Dim oDTC As New DTCDataContext(BD.Conexion)
        Dim _Proveedor As Proveedor = oDTC.Proveedor.Where(Function(F) F.ID_Proveedor = CInt(Me.C_Proveedor.Value)).FirstOrDefault
        Me.GRD_Individual.M.clsUltraGrid.Cargar("Select * From (Select ID_Articulo, codigo, descripcion, (Select PrecioOferta From C_LCLARIANA_TarifasPreus Where CodigoProveedor='" & _Proveedor.Codigo & "' and C_LCLARIANA_TarifasPreus.CodigoArticulo=Articulo.Codigo collate Latin1_General_CI_AS) as precio, (Select precioUltimoAlbaran From C_LCLARIANA_TarifasPreus Where CodigoProveedor='" & _Proveedor.Codigo & "' and C_LCLARIANA_TarifasPreus.CodigoArticulo=Articulo.Codigo collate Latin1_General_CI_AS) as precioUltimoAlbaran, (Select FechaUltimoAlbaran From C_LCLARIANA_TarifasPreus Where CodigoProveedor='" & _Proveedor.Codigo & "' and C_LCLARIANA_TarifasPreus.CodigoArticulo=Articulo.Codigo collate Latin1_General_CI_AS) as FechaUltimoAlbaran  From Articulo Where Activo=1) as a Where Precio is not null Order by Descripcion", BD)
        Me.GRD_Individual.M_Editable()
        Dim _Col As UltraGridColumn
        For Each _Col In Me.GRD_Individual.GRID.DisplayLayout.Bands(0).Columns
            If _Col.Key <> "precio" Then
                _Col.CellActivation = Activation.NoEdit
            End If
        Next

    End Sub

    Private Sub GRD_Individual_M_GRID_AfterCellUpdate(sender As Object, e As CellEventArgs) Handles GRD_Individual.M_GRID_AfterCellUpdate
        Dim _CodigoArticulo As String = e.Cell.Row.Cells("Codigo").Value
        Dim _CodigoProveedor As String = BD.RetornaValorSQL("Select Codigo From Proveedor Where ID_Proveedor=" & Me.C_Proveedor.Value)

        'Fem aquest if per comprovar que només afectarem a una row
        If BD.RetornaValorSQL("Select Count(*) From LClariana.dbo.ArticuloProveedor Where CodigoEmpresa='01' and CodigoArticulo='" & _CodigoArticulo & "' and CodigoProveedor='" & _CodigoProveedor & "'") = 1 Then

            Dim _HistorialPreu As New HistoriaPreus
            _HistorialPreu.Codigo_Proveidor = _CodigoProveedor
            _HistorialPreu.Codigo_Article = _CodigoArticulo
            _HistorialPreu.PreuAntic = BD.RetornaValorSQL("Select PrecioOferta From LClariana.dbo.ArticuloProveedor Where CodigoEmpresa='01' and CodigoArticulo='" & _CodigoArticulo & "' and CodigoProveedor='" & _CodigoProveedor & "'")
            _HistorialPreu.PreuNou = e.Cell.Value
            _HistorialPreu.Data = Now.Date
            oDTC.HistoriaPreus.InsertOnSubmit(_HistorialPreu)
            oDTC.SubmitChanges()

            BD.EjecutarConsulta("Update  LClariana.dbo.ArticuloProveedor Set PrecioOferta= " & Util.Comes_Per_Punts(e.Cell.Value) & " Where CodigoEmpresa='01' and CodigoArticulo='" & _CodigoArticulo & "' and CodigoProveedor='" & _CodigoProveedor & "'")
        End If

    End Sub

    Private Sub GRD_Individual_M_GRID_ClickRow2(ByRef sender As M_UltraGrid.m_UltraGrid, ByRef e As UltraGridRow) Handles GRD_Individual.M_GRID_ClickRow2
        If Me.C_Proveedor.SelectedIndex = -1 Then
            Exit Sub
        End If

        Call CargarGrid_Cambio_Precios(e.Cells("codigo").Value)
        Call CargarGrid_Cambio_Precios_Manuales(e.Cells("codigo").Value)

        Call CargarGrid_Albaran(e.Cells("codigo").Value)
        Call CargarGrid_Messes(e.Cells("codigo").Value)
        Call CargarGrafico(e.Cells("codigo").Value)

        Dim oDTC As New DTCDataContext(BD.Conexion)
        Dim _Proveedor As Proveedor = oDTC.Proveedor.Where(Function(F) F.ID_Proveedor = CInt(Me.C_Proveedor.Value)).FirstOrDefault
        Me.ChartControl2.DataSource = BD.RetornaDataTable("select * From C_KilosPorProveedorArticuloAñoMes Where CodigoProveedor='" & _Proveedor.Codigo & "' and CodigoArticulo='" & e.Cells("codigo").Value & "'")
    End Sub

#End Region

#Region "Grid cambios de precios"
    Private Sub CargarGrid_Cambio_Precios(ByRef pCodigoArticulo As String)
        Dim oDTC As New DTCDataContext(BD.Conexion)
        Dim _Proveedor As Proveedor = oDTC.Proveedor.Where(Function(F) F.ID_Proveedor = CInt(Me.C_Proveedor.Value)).FirstOrDefault
        Dim _precio As Decimal = 0

        Dim _DT As New DataTable
        _DT = BD.RetornaDataTable("Select TOP 20 FechaAlbaran, Precio From C_LCLARIANA_LineasAlbaranCompra Where CodigoProveedor='" & _Proveedor.Codigo & "' and CodigoArticulo='" & pCodigoArticulo & "' Order by FechaAlbaran desc")

        Dim _DT_CambioPrecio As New DataTable
        _DT_CambioPrecio.Columns.Add("FechaAlbaran", GetType(Date))
        _DT_CambioPrecio.Columns.Add("Precio", GetType(Decimal))

        For Each _DtRow In _DT.Rows
            If _DtRow.Item("Precio") <> _precio Then
                Dim _NewRow_Cambio_Precio As DataRow
                _NewRow_Cambio_Precio = _DT_CambioPrecio.NewRow
                _NewRow_Cambio_Precio.Item("FechaAlbaran") = _DtRow.Item("FechaAlbaran")
                _NewRow_Cambio_Precio.Item("Precio") = _DtRow.Item("Precio")
                _DT_CambioPrecio.Rows.Add(_NewRow_Cambio_Precio)

                _precio = _DtRow.Item("Precio")
            End If
        Next

        Me.GRD_Cambio_Precios.M.clsUltraGrid.Cargar(_DT_CambioPrecio)

        'Me.GRD_Cambio_Precios.M.clsUltraGrid.Cargar("Select TOP 20 sum(Unidades) as Unidades, FechaAlbaran, Precio, CodigoProveedor, CodigoArticulo, DescripcionArticulo, Proveedor, NumeroAlbaran, FechaRegistro, BaseImponible From C_LCLARIANA_LineasAlbaranCompra Where CodigoProveedor='" & _Proveedor.Codigo & "' and CodigoArticulo='" & pCodigoArticulo & "' Group by FechaAlbaran, Precio, CodigoProveedor, CodigoArticulo, DescripcionArticulo, Proveedor, NumeroAlbaran, FechaRegistro, BaseImponible Order by FechaAlbaran desc", BD)
        'Me.GRD_Albarans.M_Editable()
    End Sub

#End Region

#Region "Grid cambio de precios manuales"
    Private Sub CargarGrid_Cambio_Precios_Manuales(ByRef pCodigoArticulo As String)
        Dim oDTC As New DTCDataContext(BD.Conexion)
        Dim _Proveedor As Proveedor = oDTC.Proveedor.Where(Function(F) F.ID_Proveedor = CInt(Me.C_Proveedor.Value)).FirstOrDefault
        Dim _precio As Decimal = 0

        Dim _DT As New DataTable
        _DT = BD.RetornaDataTable("Select TOP 20 Data, PreuNou, PreuAntic From HistoriaPreus Where Codigo_Proveidor='" & _Proveedor.Codigo & "' and Codigo_Article='" & pCodigoArticulo & "' Order by Data desc")

        Me.GRD_CambiosPrecionManuales.M.clsUltraGrid.Cargar(_DT)

        'Me.GRD_Cambio_Precios.M.clsUltraGrid.Cargar("Select TOP 20 sum(Unidades) as Unidades, FechaAlbaran, Precio, CodigoProveedor, CodigoArticulo, DescripcionArticulo, Proveedor, NumeroAlbaran, FechaRegistro, BaseImponible From C_LCLARIANA_LineasAlbaranCompra Where CodigoProveedor='" & _Proveedor.Codigo & "' and CodigoArticulo='" & pCodigoArticulo & "' Group by FechaAlbaran, Precio, CodigoProveedor, CodigoArticulo, DescripcionArticulo, Proveedor, NumeroAlbaran, FechaRegistro, BaseImponible Order by FechaAlbaran desc", BD)
        'Me.GRD_Albarans.M_Editable()
    End Sub
#End Region

#Region "Grid albaran"
    Private Sub CargarGrid_Albaran(ByRef pCodigoArticulo As String)
        Dim oDTC As New DTCDataContext(BD.Conexion)
        Dim _Proveedor As Proveedor = oDTC.Proveedor.Where(Function(F) F.ID_Proveedor = CInt(Me.C_Proveedor.Value)).FirstOrDefault
        Me.GRD_Albarans.M.clsUltraGrid.Cargar("Select TOP 20 sum(Unidades) as Unidades, FechaAlbaran, Precio, CodigoProveedor, CodigoArticulo, DescripcionArticulo, Proveedor, NumeroAlbaran, FechaRegistro, BaseImponible From C_LCLARIANA_LineasAlbaranCompra Where CodigoProveedor='" & _Proveedor.Codigo & "' and CodigoArticulo='" & pCodigoArticulo & "' Group by FechaAlbaran, Precio, CodigoProveedor, CodigoArticulo, DescripcionArticulo, Proveedor, NumeroAlbaran, FechaRegistro, BaseImponible Order by FechaAlbaran desc", BD)
        'Me.GRD_Albarans.M_Editable()
    End Sub
#End Region

#Region "Grid messes"
    Private Sub CargarGrid_Messes(ByRef pCodigoArticulo As String)

        Dim oDTC As New DTCDataContext(BD.Conexion)
        Dim _Proveedor As Proveedor = oDTC.Proveedor.Where(Function(F) F.ID_Proveedor = CInt(Me.C_Proveedor.Value)).FirstOrDefault


        Dim _DT As New DataTable 'CReeem les columnes

        _DT.Columns.Add("Año", GetType(Integer))
        _DT.Columns.Add("Mes", GetType(String))
        _DT.Columns.Add("Kilos", GetType(Decimal))
        _DT.Columns.Add("Precio", GetType(Decimal))

        Dim mes As Integer = Now.Month
        Dim mes_nombre As String
        Dim ano As Integer = Now.Year
        Dim messes As Integer = 0

        While messes < 12
            If mes = 0 Then
                mes = 12
                ano = ano - 1
            End If

            mes_nombre = MonthName(mes)

            Dim _NewRow As DataRow
            _NewRow = _DT.NewRow
            _NewRow.Item("Año") = ano
            _NewRow.Item("Mes") = mes_nombre

            _NewRow.Item("Kilos") = BD.RetornaValorSQL("Select sum(Unidades) From C_LCLARIANA_LineasAlbaranCompra Where CodigoProveedor='" & _Proveedor.Codigo & "' and CodigoArticulo='" & pCodigoArticulo & "' and MONTH(FechaAlbaran)=" & mes & " and YEAR(FechaAlbaran)=" & ano)
            _NewRow.Item("Precio") = BD.RetornaValorSQL("Select sum(BaseImponible) From C_LCLARIANA_LineasAlbaranCompra Where CodigoProveedor='" & _Proveedor.Codigo & "' and CodigoArticulo='" & pCodigoArticulo & "' and MONTH(FechaAlbaran)=" & mes & "and YEAR(FechaAlbaran)=" & ano)

            _DT.Rows.Add(_NewRow)
            mes = mes - 1
            messes = messes + 1
        End While

        Me.GRD_Messes.GRID.ActiveRow = Nothing
        Me.GRD_Messes.M.clsUltraGrid.Cargar(_DT)
    End Sub
#End Region

#Region "Grafico"
    Private Sub CargarGrafico(ByRef pCodigoArticulo As String)
        'Dim oDTC As New DTCDataContext(BD.Conexion)
        'Dim _Proveedor As Proveedor = oDTC.Proveedor.Where(Function(F) F.ID_Proveedor = CInt(Me.C_Proveedor.Value)).FirstOrDefault

        'Dim sideBySideBarChart As New ChartControl()

        'Dim ano As Integer = Now.Year
        'Dim mes As Integer = 1
        'Dim mes_nombre As String
        'Dim messes As Integer = 0
        'Dim series1 As New Series(ano, ViewType.Bar)
        'While messes < 12
        '    mes_nombre = MonthName(mes)

        '    If IsDBNull(BD.RetornaValorSQL("Select sum(Unidades) From C_LCLARIANA_LineasAlbaranCompra Where CodigoProveedor='" & _Proveedor.Codigo & "' and CodigoArticulo='" & pCodigoArticulo & "' and MONTH(FechaAlbaran)=" & mes & " and YEAR(FechaAlbaran)=" & ano)) = True Then
        '        series1.Points.Add(New SeriesPoint(mes_nombre, 0))
        '    Else
        '        series1.Points.Add(New SeriesPoint(mes_nombre, BD.RetornaValorSQL("Select sum(Unidades) From C_LCLARIANA_LineasAlbaranCompra Where CodigoProveedor='" & _Proveedor.Codigo & "' and CodigoArticulo='" & pCodigoArticulo & "' and MONTH(FechaAlbaran)=" & mes & " and YEAR(FechaAlbaran)=" & ano)))
        '    End If

        '    mes = mes + 1
        '    messes = messes + 1
        'End While

        'mes = 1
        'Dim messes2 As Integer = 0
        'Dim series2 As New Series(Now.Year - 1, ViewType.Bar)
        'While messes2 < 12
        '    mes_nombre = MonthName(mes)
        '    If IsDBNull(BD.RetornaValorSQL("Select sum(Unidades) From C_LCLARIANA_LineasAlbaranCompra Where CodigoProveedor='" & _Proveedor.Codigo & "' and CodigoArticulo='" & pCodigoArticulo & "' and MONTH(FechaAlbaran)=" & mes & " and YEAR(FechaAlbaran)=" & ano - 1)) = True Then
        '        series2.Points.Add(New SeriesPoint(mes_nombre, 0))
        '    Else
        '        series2.Points.Add(New SeriesPoint(mes_nombre, BD.RetornaValorSQL("Select sum(Unidades) From C_LCLARIANA_LineasAlbaranCompra Where CodigoProveedor='" & _Proveedor.Codigo & "' and CodigoArticulo='" & pCodigoArticulo & "' and MONTH(FechaAlbaran)=" & mes & " and YEAR(FechaAlbaran)=" & ano - 1)))
        '    End If
        '    mes = mes + 1
        '    messes2 = messes2 + 1
        'End While

        'ChartControl1.Series.Clear()

        '' Add the series to the chart.
        'ChartControl1.Series.Add(series1)
        'ChartControl1.Series.Add(series2)
    End Sub
#End Region


    Private Sub C_Proveedor_ValueChanged(sender As Object, e As EventArgs) Handles C_Proveedor.ValueChanged
        If Me.C_Proveedor.SelectedIndex = -1 Then
            Exit Sub
        End If
        Call CargarGrid_Individual()

    End Sub

    Private Sub B_Aplicar_Click(sender As Object, e As EventArgs) Handles B_Aplicar.Click
        If Me.GRD_ArticulosSeleccionados.GRID.Rows.Count = 0 Or Me.GRD_ProveedoresSeleccionados.GRID.Rows.Count = 0 Then
            Mensaje.Mostrar_Mensaje("Imposible aplicar el cambio de precios si no hay seleccionados artículos y proveedores", M_Mensaje.Missatge_Modo.INFORMACIO, , , True)
            Exit Sub
        End If

        If Me.T_Import.Value Is Nothing = True OrElse IsNumeric(Me.T_Import.Value) = False Then
            Mensaje.Mostrar_Mensaje("Imposible aplicar el cambio de precios si no introduces un importe correcto", M_Mensaje.Missatge_Modo.INFORMACIO, , , True)
            Exit Sub
        End If

        If IsNothing(Me.DT_Modificacio.Value) = True Then
            Mensaje.Mostrar_Mensaje("Imposible aplicar el cambio de precios si no introduces una fecha de modificación", M_Mensaje.Missatge_Modo.INFORMACIO, , , True)
            Exit Sub
        End If

        Dim _IDArticulo As String
        Dim _IDProveedor As String
        Dim _ContadorActualizaciones As Integer = 0
        For Each _IDArticulo In oArrayProductesSeleccionats
            For Each _IDProveedor In oArrayProveidorsSeleccionats
                Dim _CodigoArticulo As String = oDTC.Articulo.Where(Function(F) F.ID_Articulo = _IDArticulo).FirstOrDefault.Codigo
                Dim _CodigoProveedor As String = oDTC.Proveedor.Where(Function(F) F.ID_Proveedor = _IDProveedor).FirstOrDefault.Codigo
                If BD.RetornaValorSQL("Select Count(*) From LClariana.dbo.ArticuloProveedor Where Automatico=0 and PrecioOferta<>0 and CodigoEmpresa='01' and CodigoArticulo='" & _CodigoArticulo & "' and CodigoProveedor='" & _CodigoProveedor & "'") = 1 Then
                    'Dim _Precio As Decimal = BD.RetornaValorSQL("Select PrecioOferta From LClariana.dbo.ArticuloProveedor Where CodigoEmpresa='01' and CodigoArticulo='" & _CodigoArticulo & "' and CodigoProveedor='" & _CodigoProveedor & "'")

                    Dim _HistorialPreu As New HistoriaPreus
                    _HistorialPreu.Codigo_Proveidor = _CodigoProveedor
                    _HistorialPreu.Codigo_Article = _CodigoArticulo
                    _HistorialPreu.PreuAntic = BD.RetornaValorSQL("Select PrecioOferta From LClariana.dbo.ArticuloProveedor Where Automatico=0 and PrecioOferta<>0 and CodigoEmpresa='01' and CodigoArticulo='" & _CodigoArticulo & "' and CodigoProveedor='" & _CodigoProveedor & "'")
                    _HistorialPreu.PreuNou = _HistorialPreu.PreuAntic + Util.Comes_Per_Punts(Me.T_Import.Value)
                    _HistorialPreu.Data = CDate(Me.DT_Modificacio.Value).Date
                    oDTC.HistoriaPreus.InsertOnSubmit(_HistorialPreu)
                    oDTC.SubmitChanges()

                    BD.EjecutarConsulta("Update  LClariana.dbo.ArticuloProveedor Set PrecioOferta= PrecioOferta + " & Util.Comes_Per_Punts(Me.T_Import.Value) & " Where CodigoEmpresa='01' and CodigoArticulo='" & _CodigoArticulo & "' and CodigoProveedor='" & _CodigoProveedor & "'")
                    _ContadorActualizaciones = _ContadorActualizaciones + 1
                End If

            Next
        Next
        Mensaje.Mostrar_Mensaje(_ContadorActualizaciones & " precios fueron actualizados", M_Mensaje.Missatge_Modo.INFORMACIO, , , True)

    End Sub

    Private Sub SqlDataSource1_ConfigureDataConnection(sender As Object, e As DevExpress.DataAccess.Sql.ConfigureDataConnectionEventArgs) Handles SqlDataSource1.ConfigureDataConnection
        Dim connectionParameters As New DevExpress.DataAccess.ConnectionParameters.MsSqlConnectionParameters(BD.pBDNomInstancia, BD.pBDNomBaseDades, BD.pBDUsuari, BD.pBDContrasenya, DevExpress.DataAccess.ConnectionParameters.MsSqlAuthorizationType.SqlServer)
        e.ConnectionParameters = connectionParameters
        'SqlDataSource1.ConnectionName = "pepe"
        ' SqlDataSource1.ConnectionParameters = connectionParameters
    End Sub

    Private Sub B_CambioAlbaran_Buscar_Click(sender As Object, e As EventArgs) Handles B_CambioAlbaran_Buscar.Click
        If IsDate(Me.DT_CambioAlbaran_FechaInicio.Value) And IsDate(Me.DT_CambioAlbaran_FechaFin.Value) And Me.C_CambioAlbaran_Articulo.SelectedIndex <> -1 And Me.C_CambioAlbaran_Proveedor.SelectedIndex <> -1 Then
            Dim _CodigoArticulo As String = BD.RetornaValorSQL("Select Codigo From Articulo Where ID_Articulo=" & Me.C_CambioAlbaran_Articulo.Value)
            Dim _CodigoProveedor As String = BD.RetornaValorSQL("Select Codigo From Proveedor Where ID_Proveedor=" & Me.C_CambioAlbaran_Proveedor.Value)

            Me.GRD_CambioAlbaran.M.clsUltraGrid.Cargar("Select * From C_LCLARIANA_LineasAlbaranCompra Where CodigoProveedor='" & _CodigoProveedor & "' and CodigoArticulo='" & _CodigoArticulo & "' and FechaAlbaran between '" & Me.DT_CambioAlbaran_FechaInicio.Value & "' and '" & Me.DT_CambioAlbaran_FechaFin.Value & "' and fechaFactura is null Order by FechaAlbaran Desc", BD)
        End If
    End Sub

    Private Sub B_CambioAlbaran_Aplicar_Click(sender As Object, e As EventArgs) Handles B_CambioAlbaran_Aplicar.Click
        If IsDate(Me.DT_CambioAlbaran_FechaInicio.Value) And IsDate(Me.DT_CambioAlbaran_FechaFin.Value) And Me.C_CambioAlbaran_Articulo.SelectedIndex <> -1 And Me.C_CambioAlbaran_Proveedor.SelectedIndex <> -1 And IsNumeric(Me.T_CambioAlbaran_NuevoPrecio.Value) Then
            Dim _CodigoArticulo As String = BD.RetornaValorSQL("Select Codigo From Articulo Where ID_Articulo=" & Me.C_CambioAlbaran_Articulo.Value)
            Dim _CodigoProveedor As String = BD.RetornaValorSQL("Select Codigo From Proveedor Where ID_Proveedor=" & Me.C_CambioAlbaran_Proveedor.Value)

            Dim _Precio As Decimal = Me.T_CambioAlbaran_NuevoPrecio.Value
            Dim _pRow As UltraGridRow
            For Each _pRow In Me.GRD_CambioAlbaran.GRID.Rows
                Dim _IDLinea As String = _pRow.Cells("IDAlbaranLinea").Value
                Dim _IDAlbaran As String = _pRow.Cells("IDAlbaran").Value
                Dim _Unidades As Decimal = _pRow.Cells("Unidades").Value
                Dim _ImporteLinea As Decimal
                If _Unidades = 0 Or _Precio = 0 Then
                    _ImporteLinea = 0
                Else
                    _ImporteLinea = (_Unidades * _Precio) / 1000
                End If

                BD.EjecutarConsulta("Update lclariana.dbo.LineasAlbaranProveedor Set precio=" & Util.Comes_Per_Punts(_Precio) & ", ImporteBruto=" & Util.Comes_Per_Punts(_ImporteLinea) & ", ImporteNeto=" & Util.Comes_Per_Punts(_ImporteLinea) & ", ImporteParcial=" & Util.Comes_Per_Punts(_ImporteLinea) & ", BaseImponible=" & Util.Comes_Per_Punts(_ImporteLinea) & ", BaseIva=" & Util.Comes_Per_Punts(_ImporteLinea) & ", ImporteLiquido=" & Util.Comes_Per_Punts(_ImporteLinea) & " WHERE  LineasPosicion ='" & _IDLinea & "'")

                Dim _ImporteAlbaran As Decimal
                _ImporteAlbaran = BD.RetornaValorSQL("Select Sum(ImporteBruto) From lclariana.dbo.LineasAlbaranProveedor Where CodigoEmpresa='" & _pRow.Cells("CodigoEmpresa").Value & "' and EjercicioAlbaran='" & _pRow.Cells("EjercicioAlbaran").Value & "' and SerieAlbaran='" & _pRow.Cells("SerieAlbaran").Value & "' and NumeroAlbaran='" & _pRow.Cells("NumeroAlbaran").Value & "'")

                BD.EjecutarConsulta("Update lclariana.dbo.CabeceraAlbaranProveedor Set ImporteBruto=" & Util.Comes_Per_Punts(_ImporteAlbaran) & ", ImporteNetoLineas=" & Util.Comes_Per_Punts(_ImporteAlbaran) & ", ImporteNeto=" & Util.Comes_Per_Punts(_ImporteAlbaran) & ", BaseImponible=" & Util.Comes_Per_Punts(_ImporteAlbaran) & ", ImporteLiquido=" & Util.Comes_Per_Punts(_ImporteAlbaran) & ", ImporteFactura=" & Util.Comes_Per_Punts(_ImporteAlbaran) & " WHERE  IdAlbaranPro  ='" & _IDAlbaran & "'")

            Next
        End If
    End Sub

    Private Sub XML_Proveidors_Click(sender As Object, e As EventArgs) Handles XML_Proveidors.Click

        Util.WaitFormObrir()

        Dim _DTS As New DataSet

        Dim _DS1 As DataTable = BD.RetornaDataTable("Select * From Proveedor")
        _DS1.TableName = "Usuari"
        _DTS.Tables.Add(_DS1)

        Dim _DS2 As DataTable = BD.RetornaDataTable("Select * from C_LCLARIANA_LineasAlbaranCompra where FechaAlbaran >= DATEADD(MM, -3, GETDATE()) and CodigoProveedor collate Latin1_General_CI_AS in (Select Codigo From Proveedor) and (CodigoArticulo  collate Latin1_General_CI_AS in (Select Codigo From Articulo))")
        _DS2.TableName = "Historia"
        _DTS.Tables.Add(_DS2)

        Dim _DS3 As DataTable = BD.RetornaDataTable("Select * From C_LCLARIANA_TarifasPreus Where FechaUltimoAlbaran >= DATEADD(MM, -3, GETDATE()) and CodigoProveedor collate Latin1_General_CI_AS in (Select Codigo From Proveedor) and (CodigoArticulo  collate Latin1_General_CI_AS in (Select Codigo From Articulo))")
        _DS3.TableName = "Tarifa"
        _DTS.Tables.Add(_DS3)

        Dim _DS4 As DataTable = BD.RetornaDataTable("select * from (select *, row_number() over (partition by Codigo_proveidor, Codigo_Article order by Fecha desc) x from C_HistorialPreus) alias where x < 4 order by fecha asc, Codigo_Article desc, Codigo_Proveidor desc")
        _DS4.TableName = "Preu"
        _DTS.Tables.Add(_DS4)

        _DTS.DataSetName = "Tot"
        _DTS.WriteXml(Me.TE_RutaExportacio.Text & "\XML_Clariana.xml")

        Util.WaitFormTancar()

        Mensaje.Mostrar_Mensaje("Exportación realizada con éxito", M_Mensaje.Missatge_Modo.INFORMACIO, , , False)

    End Sub
End Class