<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CreateRotatedFullStackedBarChartItem1.Description" xml:space="preserve">
    <value>Compare the percentage each value contributes to a total across categories using horizontal rectangles.

Use it when the values on the chart represent durations or when the category text is very long.</value>
  </data>
  <data name="CreateRotatedFullStackedBarChartItem1.Hint" xml:space="preserve">
    <value>Compare the percentage each value contributes to a total across categories using horizontal rectangles.

Use it when the values on the chart represent durations or when the category text is very long.</value>
  </data>
  <data name="CreateArea3DChartItem1.Description" xml:space="preserve">
    <value>muestra como llenan de zonas en un diagrama, con cada punto de datos muestra como un pico o un hueco en la zona.

Utilizar cuando necesites Mostrar tendencias de varias series en el mismo diagrama y también muestran la relación de las partes al todo.</value>
  </data>
  <data name="CreateArea3DChartItem1.Hint" xml:space="preserve">
    <value>muestra como llenan de zonas en un diagrama, con cada punto de datos muestra como un pico o un hueco en la zona.

Utilizar cuando necesites Mostrar tendencias de varias series en el mismo diagrama y también muestran la relación de las partes al todo.</value>
  </data>
  <data name="CreateFullStackedArea3DChartItem1.Description" xml:space="preserve">
    <value>Muestra datos como zonas en un diagrama, para que el valor de cada dato punto se apilan con los valores de todos los otros correspondientes puntos de datos.

Utilizar para comparar los valores de porcentaje de varias series para los mismos argumentos de punto de.</value>
  </data>
  <data name="CreateFullStackedArea3DChartItem1.Hint" xml:space="preserve">
    <value>Muestra datos como zonas en un diagrama, para que el valor de cada dato punto se apilan con los valores de todos los otros correspondientes puntos de datos.

Utilizar para comparar los valores de porcentaje de varias series para los mismos argumentos de punto de.</value>
  </data>
  <data name="CreateFunnelChartItem1.Description" xml:space="preserve">
    <value>Displays a wide area at the top, indicating the total points' value, while other areas are proportionally smaller.

Use it when it is necessary to represent stages in a sales process, show the amount of potential revenue for each stage, as well as identify potential problem areas in an organization's sales processes.</value>
  </data>
  <data name="CreateFunnelChartItem1.Hint" xml:space="preserve">
    <value>Displays a wide area at the top, indicating the total points' value, while other areas are proportionally smaller.

Use it when it is necessary to represent stages in a sales process, show the amount of potential revenue for each stage, as well as identify potential problem areas in an organization's sales processes.</value>
  </data>
  <data name="CreateFunnel3DChartItem1.Description" xml:space="preserve">
    <value>Displays a wide area at the top, indicating the total points' value, while other areas are proportionally smaller.

Use it when it is necessary to represent stages in a sales process, show the amount of potential revenue for each stage, as well as identify potential problem areas in an organization's sales processes.</value>
  </data>
  <data name="CreateFunnel3DChartItem1.Hint" xml:space="preserve">
    <value>Displays a wide area at the top, indicating the total points' value, while other areas are proportionally smaller.

Use it when it is necessary to represent stages in a sales process, show the amount of potential revenue for each stage, as well as identify potential problem areas in an organization's sales processes.</value>
  </data>
  <data name="CreateStockChartItem1.Description" xml:space="preserve">
    <value>Muestra la variación sufrida en los precios de la bolsa durante un día. Los valores de Apertura y Cierre se representan por líneas a la izquierda y a la derecha de cada punto, y valores máximos y mínimos se representan por líneas superiores e inferiores que se muestran para cada punto.</value>
  </data>
  <data name="CreateStockChartItem1.Hint" xml:space="preserve">
    <value>Muestra la variación sufrida en los precios de la bolsa durante un día. Los valores de Apertura y Cierre se representan por líneas a la izquierda y a la derecha de cada punto, y valores máximos y mínimos se representan por líneas superiores e inferiores que se muestran para cada punto.</value>
  </data>
  <data name="CreateCandleStickChartItem1.Description" xml:space="preserve">
    <value>Muestra la variación de un valor en la bolsa durante un día.  Los valores de Apertura y Cierre se representan por líneas a la izquierda y a la derecha de cada punto, y valores máximos y mínimos se representan por líneas superiores e inferiores que se muestran para cada punto.</value>
  </data>
  <data name="CreateCandleStickChartItem1.Hint" xml:space="preserve">
    <value>Muestra la variación de un valor en la bolsa durante un día.  Los valores de Apertura y Cierre se representan por líneas a la izquierda y a la derecha de cada punto, y valores máximos y mínimos se representan por líneas superiores e inferiores que se muestran para cada punto.</value>
  </data>
  <data name="CreateRadarRangeAreaChartItem1.Description" xml:space="preserve">
    <value>en un diagrama circular en base a ángulos como lleno de zonas, definidas por los puntos de datos con dos valores que son los límites mínimos y máximos. Utilizarlo cuando lo necesite acentuar el delta entre los valores inicial y final.</value>
  </data>
  <data name="CreateRadarRangeAreaChartItem1.Hint" xml:space="preserve">
    <value>en un diagrama circular en base a ángulos como lleno de zonas, definidas por los puntos de datos con dos valores que son los límites mínimos y máximos. Utilizarlo cuando lo necesite acentuar el delta entre los valores inicial y final.</value>
  </data>
  <data name="CreateScatterRadarLineChartItem1.Description" xml:space="preserve">
    <value>Displays data as a line on a circular grid that has multiple axis along which data can be plotted. The series points are drawn in the circular grid in the same order that they have in the series point collection.</value>
  </data>
  <data name="CreateScatterRadarLineChartItem1.Hint" xml:space="preserve">
    <value>Displays data as a line on a circular grid that has multiple axis along which data can be plotted. The series points are drawn in the circular grid in the same order that they have in the series point collection.</value>
  </data>
  <data name="CreatePolarRangeAreaChartItem1.Description" xml:space="preserve">
    <value>en un diagrama circular como lleno de zonas, definidas por los puntos de datos con dos valores que son los límites mínimos y máximos. Utilizarlo cuando lo necesite acentuar el delta entre los valores inicial y final.</value>
  </data>
  <data name="CreatePolarRangeAreaChartItem1.Hint" xml:space="preserve">
    <value>en un diagrama circular como lleno de zonas, definidas por los puntos de datos con dos valores que son los límites mínimos y máximos. Utilizarlo cuando lo necesite acentuar el delta entre los valores inicial y final.</value>
  </data>
  <data name="CreateScatterPolarLineChartItem1.Description" xml:space="preserve">
    <value>Show trends for several series and compare their values for the same point arguments on a circular diagram on the basis of angles. The series points are drawn in the circular grid in the same order that they have in the series point collection.</value>
  </data>
  <data name="CreateScatterPolarLineChartItem1.Hint" xml:space="preserve">
    <value>Show trends for several series and compare their values for the same point arguments on a circular diagram on the basis of angles. The series points are drawn in the circular grid in the same order that they have in the series point collection.</value>
  </data>
  <data name="CreateRangeAreaChartItem1.Description" xml:space="preserve">
    <value>La serie muestra como lleno de zonas en un diagrama, definido por los puntos de datos con dos valores que son los límites mínimos y máximos.

Utilizarlo cuando lo necesite acentuar el delta entre los valores inicial y final.</value>
  </data>
  <data name="CreateRangeAreaChartItem1.Hint" xml:space="preserve">
    <value>La serie muestra como lleno de zonas en un diagrama, definido por los puntos de datos con dos valores que son los límites mínimos y máximos.

Utilizarlo cuando lo necesite acentuar el delta entre los valores inicial y final.</value>
  </data>
  <data name="CreateRangeArea3DChartItem1.Description" xml:space="preserve">
    <value>La serie muestra como lleno de zonas en un diagrama, definido por los puntos de datos con dos valores que son los límites mínimos y máximos.

Utilizarlo cuando lo necesite acentuar el delta entre los valores inicial y final.</value>
  </data>
  <data name="CreateRangeArea3DChartItem1.Hint" xml:space="preserve">
    <value>La serie muestra como lleno de zonas en un diagrama, definido por los puntos de datos con dos valores que son los límites mínimos y máximos.

Utilizarlo cuando lo necesite acentuar el delta entre los valores inicial y final.</value>
  </data>
  <data name="CreateSideBySideGanttChartItem1.Description" xml:space="preserve">
    <value>Displays horizontal bars along the time axis. Each bar represents a separate event with the start and end values, hence these charts are used to track different activities during the time frame.

Use it when it's necessary to show activity bars from different series one above another, to compare their duration.</value>
  </data>
  <data name="CreateSideBySideGanttChartItem1.Hint" xml:space="preserve">
    <value>Displays horizontal bars along the time axis. Each bar represents a separate event with the start and end values, hence these charts are used to track different activities during the time frame.

Use it when it's necessary to show activity bars from different series one above another, to compare their duration.</value>
  </data>
  <metadata name="ErrorProvider1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>51</value>
  </metadata>
</root>